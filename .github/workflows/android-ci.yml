name: Android CI

on:
  push:
    branches:
      - main
      - devel
      - versus-ci-android
  pull_request:
    branches:
      - main

defaults:
  run:
    working-directory: android-project

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build release-apk
    steps:
      - uses: styfle/cancel-workflow-action@0.9.1
        with:
          workflow_id: android-ci.yml
          all_but_latest: true
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2

      - name: Set output
        id: vars
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              echo ::set-output name=short_ref::pull-request
              echo "Is Pull-Request"
          else
              echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}
              echo "Is normal build at the branch"
          fi

      - name: Install Dependencies
        shell: bash
        run: |
          sudo apt-get update -qq && sudo apt-get install -qq lftp
          # Pull submodules
          git submodule init
          git submodule update

      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Without NDK not compile and not normal error message. NDK is required
      - name: Install NDK
        run: echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;22.1.7171670" --sdk_root=${ANDROID_SDK_ROOT}
      # Some times is have problems with permissions for ./gradle file. Then uncommit it code
      #    - name: Make gradlew executable
      #      run: chmod +x ./gradlew

      - name: Output version code
        run: echo VERSION_CODE=${{ github.run_number }} > ./version.properties

      - name: Import the signing
        run: echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > release-key.jks

      - name: Build with Gradle
        run: ./gradlew assembleReleaseci
        env:
          RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          PIN_ALIAS: ${{ secrets.PIN_ALIAS }}
          DB_PASS_ALIAS: ${{ secrets.DB_PASS_ALIAS }}

      - name: Rename APK
        shell: bash
        run: |
          mv thextech/build/outputs/apk/releaseci/thextech-releaseci.apk thextech-android-${{ steps.vars.outputs.short_ref }}.apk

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: thextech-android-${{ steps.vars.outputs.short_ref }}
          path: android-project/thextech-android-${{ steps.vars.outputs.short_ref }}.apk

      - name: Deploy to builds.wohlsoft.ru
        if: success() && github.event_name != 'pull_request'
        shell: bash
        run: |
          UPLOAD_LIST="set ssl:verify-certificate no;"
          UPLOAD_LIST="${UPLOAD_LIST} put -O "www/android/" ./thextech-android-${{ steps.vars.outputs.short_ref }}.apk;"
          lftp -e "${UPLOAD_LIST} exit" -u ${{ secrets.builds_login }},${{ secrets.builds_password }} ${{ secrets.builds_host }}

      - name: List Build Directory
        if: always()
        shell: bash
        run: |
          git status
          ls -lR .
